# =================================
# üåç NESTJS API STARTER KIT - ENVIRONMENT VARIABLES
# =================================
# Copy this file to .env and update the values according to your environment
# DO NOT commit .env file to version control!

# =================================
# üöÄ APPLICATION CONFIGURATION
# =================================
NODE_ENV=development
PORT=3000
HOST=0.0.0.0
API_PREFIX=api

# Application metadata
APP_NAME="NestJS Starter Kit"
APP_VERSION=1.0.0
APP_DESCRIPTION="Production-ready NestJS API starter kit with comprehensive tooling"

# =================================
# üóÑÔ∏è DATABASE CONFIGURATION
# =================================
DB_HOST=localhost
DB_PORT=5432
DB_USERNAME=nestjs_user
DB_PASSWORD=nestjs_password
DB_NAME=nestjs_starter

# For production, consider using connection URLs for better security:
# DATABASE_URL=postgresql://user:password@host:port/database

# =================================
# üîê SECURITY CONFIGURATION
# =================================
# JWT Configuration (for future authentication implementation)
JWT_SECRET=your-super-secure-jwt-secret-key-with-at-least-32-characters
JWT_EXPIRES_IN=24h

# CORS Origins (comma-separated list)
CORS_ORIGINS=http://localhost:3000,http://localhost:3001

# =================================
# üö¶ RATE LIMITING CONFIGURATION
# =================================
THROTTLE_TTL=60000
THROTTLE_LIMIT=100

# =================================
# üìù LOGGING CONFIGURATION
# =================================
LOG_LEVEL=info
LOG_FORMAT=json

# Use NestJS 11 built-in logger (true) or Winston (false)
USE_NESTJS_LOGGER=true

# Available log levels: error, warn, info, debug, verbose
# Available log formats: json, simple

# =================================
# üîß DEVELOPMENT TOOLS
# =================================
# Set to 'true' to enable development features
ENABLE_SWAGGER=false
ENABLE_CORS_IN_PROD=false
ENABLE_DEBUG_LOGGING=false

# =================================
# üìä MONITORING & METRICS
# =================================
# Application Performance Monitoring
ENABLE_APM=false
APM_SERVICE_NAME=nestjs-api-starter
APM_ENVIRONMENT=development

# Health Check Configuration
HEALTH_CHECK_MEMORY_HEAP_THRESHOLD=150
HEALTH_CHECK_MEMORY_RSS_THRESHOLD=150
HEALTH_CHECK_DISK_THRESHOLD=0.9

# =================================
# üåê EXTERNAL SERVICES
# =================================
# Redis Configuration (optional, for caching)
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0

# Email Configuration (optional, for notifications)
EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_SECURE=true
EMAIL_USER=your-email@gmail.com
EMAIL_PASS=your-app-password

# File Storage (optional, for file uploads)
STORAGE_PROVIDER=local
STORAGE_ENDPOINT=
STORAGE_BUCKET=uploads
STORAGE_ACCESS_KEY=
STORAGE_SECRET_KEY=
STORAGE_REGION=us-east-1

# =================================
# üèóÔ∏è BUILD & DEPLOYMENT
# =================================
# Build configuration
BUILD_VERSION=1.0.0
BUILD_TIMESTAMP=
BUILD_COMMIT_SHA=

# Deployment configuration
DEPLOYMENT_ENVIRONMENT=development
DEPLOYMENT_REGION=us-east-1
DEPLOYMENT_CLUSTER=default

# =================================
# üê≥ DOCKER CONFIGURATION
# =================================
# These variables are used by docker-compose.yml
COMPOSE_PROJECT_NAME=nestjs-starter
POSTGRES_CONTAINER_NAME=nestjs-postgres
API_CONTAINER_NAME=nestjs-api
REDIS_CONTAINER_NAME=nestjs-redis

# =================================
# üö® IMPORTANT NOTES
# =================================
# 1. Never commit your .env file to version control
# 2. Use strong, unique passwords for all services
# 3. In production, use environment variables or secret management services
# 4. Regularly rotate secrets and API keys
# 5. Use different databases for development, testing, and production
# 6. Enable SSL/TLS in production environments